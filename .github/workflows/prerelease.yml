name: Pre-release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+-[0-9]+.pre[0-9]+.up[0-9]+'

env:
  HAVE_TEST_KEYSTORE: ${{ secrets.TEST_KEYSTORE != '' }}

jobs:
  build:
    name: Build
    if: "github.event.base_ref != 'refs/heads/main' && github.event.base_ref != 'refs/heads/upstream'"
    runs-on: ubuntu-22.04
    env:
      GRADLE_OPTS: "-Dorg.gradle.project.kotlin.compiler.execution.strategy=in-process"
      CI_MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up builder image
        run: docker-compose build
        working-directory: reproducible-builds

      - name: Extract test keys
        if: "env.HAVE_TEST_KEYSTORE == 'true'"
        run: printenv TEST_KEYSTORE | base64 -d > certs/test.jks
        working-directory: reproducible-builds
        env:
          TEST_KEYSTORE: ${{ secrets.TEST_KEYSTORE }}

      - name: Build pre-release
        if: "env.HAVE_TEST_KEYSTORE == 'false'"
        run: docker-compose --env-file ci/prerelease.env run assemble
        working-directory: reproducible-builds

      - name: Build and sign pre-release
        if: "env.HAVE_TEST_KEYSTORE == 'true'"
        run: docker-compose --env-file ci/prerelease.env run assemble
        working-directory: reproducible-builds
        env:
          CI_KEYSTORE_PATH: certs/test.jks
          CI_KEYSTORE_ALIAS: test
          CI_KEYSTORE_PASSWORD: ${{ secrets.TEST_KEYSTORE_PASSWORD }}

      - name: Clean up
        if: "always()"
        run: rm -f certs/test.jks
        working-directory: reproducible-builds

      - name: Log checksums
        run: find outputs \( -name "*.aab" -o -name "*.apk" \) -exec sha256sum '{}' +
        working-directory: reproducible-builds

      - name: Upload APKs
        uses: actions/upload-artifact@v3
        with:
          name: apk
          path: reproducible-builds/outputs/apk/*/release/*.apk
          if-no-files-found: error

      - name: Upload Bundles
        uses: actions/upload-artifact@v3
        with:
          name: bundle
          path: reproducible-builds/outputs/bundle/*Release/*.aab
          if-no-files-found: error

  publish:
    name: Publish
    needs: build
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Create pre-release draft
        run: gh release create -d -p -t "$GITHUB_REF_NAME" "$GITHUB_REF_NAME" ./apk/*/release/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLISH_PAT || secrets.GITHUB_TOKEN }}
